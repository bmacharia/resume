{
  "basics": {
    "name": "Babu Macharia",
    "label": "IT Infrastructure | Cloud Engineer | DevOps | US Navy Veteran",
    "email": "babu.macharia@protonmail.com",
    "summary": "Cloud Engineer and DevOps specialist with expertise in AWS infrastructure automation and software development lifecycle optimization. Proven ability to design, implement, and manage scalable cloud architectures. AWS CertifiedSolutions Architect.",
    "profiles": [
      {
        "network": "GitHub",
        "username": "bmacharia",
        "url": "https://github.com/bmacharia"
      },
      {
        "network": "LinkedIn",
        "username": "bmacharia",
        "url": "https://www.linkedin.com/in/babu-macharia/"
      },
      {
        "network": "Personal Blog",
        "username": "Babu Macharia",
        "url": "https://babumacharia.com/"
      }
    ]
  },

  "certificates": [
    {
      "name": "Certified Solutions Architect 2022",
      "issuer": "Amazon Web Services"
    },
    {
      "name": "Terraform Associate 2022",
      "issuer": "HashiCorp"

    }
  ],
  "education": [
    {
      "institution": "University of California at Berkeley",
      "studyType": "Bachelors of Arts, English Literature"
    },
    {
      "institution": "University of California Berkeley Extension",
      "area": "Professional Program in Data Administration and Management",
      "studyType": "Data(bases) Using SQL, Developing Database Applications, Data Mining Using SQL"
    }
  ],

  "projects": [
    {
      "name": "AWS-Based Scalable Web Architecture",
      "startDate": "2023-01-01",
      "endDate": "2023-12-31",
      "description": "Engineered a secure, scalable web application architecture on AWS with a containerized Flask backend on ECS Fargate and a React front-end served via S3/CloudFront. Implemented continuous integration and deployment with AWS CodePipeline, and used Amazon RDS (PostgreSQL) and DynamoDB for data storage.",
      "highlights": [
        "Designed and implemented a secure AWS architecture featuring a custom VPC and containerized Flask application on ECS Fargate.",
        "Configured AWS CodePipeline for continuous integration and deployment, enabling automated updates.",
        "Hosted a responsive React front end on Amazon S3 with CloudFront, managing data with Amazon RDS (PostgreSQL) and DynamoDB for high availability."
      ],
      "keywords": [
        "AWS",
        "Amazon VPC",
        "AWS ECS Fargate",
        "Flask",
        "React",
        "Amazon S3",
        "Amazon CloudFront",
        "Amazon RDS",
        "PostgreSQL",
        "Amazon DynamoDB",
        "AWS CodePipeline",
        "CI/CD"
      ]
    },
    {
      "name": "TerraTowns Community Platform",
      "startDate": "2023-01-01",
      "endDate": "2023-12-31",
      "description": "Built an Infrastructure-as-Code solution for a community platform using Terraform Cloud for state management and AWS services for content delivery. Developed a custom Terraform provider in Go (validated with a Ruby mock server) to enable streamlined infrastructure management, and produced comprehensive documentation for future maintenance.",
      "highlights": [
        "Leveraged Terraform Cloud for state file management and integrated AWS services (Amazon S3, CloudFront) for efficient data handling.",
        "Developed a custom Terraform provider in Go, validated via a Ruby-based mock server, to streamline CRUD operations for community infrastructure management.",
        "Produced clear documentation to facilitate development and future maintenance."
      ],
      "keywords": [
        "Terraform",
        "Terraform Cloud",
        "Go",
        "Ruby",
        "Amazon S3",
        "Amazon CloudFront",
        "Infrastructure as Code",
        "Terraform Provider",
        "AWS"
      ]
    },
    {
      "name": "Microsoft Infrastructure Workshop â€“ SQL Server",
      "startDate": "2023-01-01",
      "endDate": "2023-12-31",
      "description": "Configured a multi-site Windows infrastructure (Active Directory, DNS, networking) to support a high-availability SQL Server environment. Implemented SQL Server Always On Availability Groups for robust disaster recovery and enhanced troubleshooting skills to ensure reliable operations.",
      "highlights": [
        "Configured multi-site data center environments incorporating Active Directory, DNS, and networking to support high availability.",
        "Implemented SQL Server Always On Availability Groups for high availability and disaster recovery.",
        "Enhanced troubleshooting skills, reducing reliance on external resources and ensuring infrastructure reliability."
      ],
      "keywords": [
        "Active Directory",
        "DNS",
        "Networking",
        "SQL Server",
        "Always On Availability Groups",
        "High Availability",
        "Disaster Recovery",
        "Troubleshooting"
      ]
    }
  ],
  "work": [
    {
      "name": "Exact Sciences",
      "location": "Redwood City, CA",
      "position": "Specimen Material Handler, Accessioning Technician II, Pre-Analytical Laboratory Technician II",
      "startDate": "2012-01-01",
      "endDate": "2022-12-31",
      "summary": "Held multiple roles in specimen handling and pre-analytical laboratory operations, implementing process improvements that increased sample handling capacity, reduced errors, and improved compliance with quality standards.",
      "highlights": [
        "Increased IntelliCab sample capacity by 30% through process modifications.",
        "Reduced sample swap incidents by 50%.",
        "Improved compliance with quality standards by 25%.",
        "Conducted quality control on 60-100 specimens with 99% accuracy.",
        "Streamlined lab intake processes, reducing processing time by 20%.",
        "Verified sample integrity, achieving 99% accuracy."
      ]
    }
  ]
}